continue
data["int_345"]
data
continue
p.port_number
continue
" ".empty?
"".empty?
params[:user][:password_confirmation].empty?
params[:user][:password_confirmation]
!!params[:user][:password_confirmation]
continue
params[:user][:password]
params['password']
params
params[:password]
!!params[:password]
continue
!!params[:password]
params
params[:password_confirmation]
params[:password]
params[:password] || params[:password_confirmation]
continue
params[:password] || params[:password_confirmation]
!!params[:password]
!params[:password]
!!params[:password]
params[:password].true?
params[:password]
params
continue
exit
state
data[state]
continue
state
continue
state
p.port_number
continue
data[1]
continue
created_at + 9.minutes < DateTime.now
created_at + 8.minutes < DateTime.now
created_at + 7.minutes < DateTime.now
created_at + 10.minutes < DateTime.now
created_at + 50.minutes < DateTime.now
created_at + 5.minutes < DateTime.now
created_at + 1.hour < DateTime.now
created_at + time_out.seconds < DateTime.now
DateTime.now
time_out.seconds
time_out
created_at
continue
Connection.find_by(id: port_parameters['connection_id'])
port_parameters['connection_id']
connection = Connection.find_by(id: port_parameters['connection_id'])
connection = Connection.find_by(id: port_parameters['connection_id']
port_parameters
x['port_id']
x
continue
data[1].length
data[1].all? { |x| port_group(x['port_type']) == "chart" }
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters]
continue
@response[:ports_parameters].last
@response[:ports_parameters]
@response
continue
@response[:ports_parameters].push(*get_data(p))
@response[:ports_parameters]
get_data(p)
continue
get_data(p)
continue
@response
continue
data[1].length
data[2].length
data
continue
data[1].length
data[1]
data
continue
@ports_parameters
ports_parameters
continue
@record
@record.errors.any?
continue
data[:identifier]
continue
record[state]
continue
@record
@record.errors.any?
continue
@record.errors.any?
@record.errors
@record
continue
l['port_number'][%r{\Aoutput_(.*)\z}, 1]
l = @data.find {|x| x['port_id'] == 5}
@data.find {|x| x['port_id'] == 5}
@data
@selected_buttons
continue
@selected_buttons
continue
JSON.parse(params[:selected_buttons]).length
JSON.parse(params[:selected_buttons])[0]
JSON.parse(params[:selected_buttons])[1]
JSON.parse(params[:selected_buttons])[0]
JSON.parse(params[:selected_buttons])
continue
JSON.parse(params[:selected_buttons])
params
params[:command]
continue
@response
continue
@response
@respose
continue
ObjectOneRecord.where(id: connection_id).last
connection_id
data
continue
data
continue
ObjectOneRecord.where(id: connection_id).last
data
continue
data[:command]
continue
@new_data[data[:port_name]]
continue
@new_data[data[:port_name]]
continue
@answer
continue
@response
continue
data
continue
@command
command
@new_data
continue
ObjectOneRecord.where(id: connection_id).last
ObjectOneRecord.where(id: connection_id).last.try(port_name)
data
connection_id
port_id
port_name
command
continue
id[%r{\A.*_c_(.*)\z}, 1][A
 id[%r{\A.*_p_(.*)_c_.*\z}, 1]
id[%r{\A.*_p_(.*)_c_.*\r}, 1]
id[%r{\A.*_p_(.*)_c_.*\z}, 1]
id[%r{\A.*_p_(.*)_c_\z}, 1]
id[%r{\A.*_p_(.*)_c_}, 1]
id[%r{_p_(.*)_c_}, 1]
id[%r{_p_(.*?)_c_}]
id[%r{_p_(.*)_c_}]
id[%r{#{'_p_'}(.*)#{'_c_'}}]
id[%r{#{_p_}(.*)#{_c_}}]
id[%r{_p_(.*)_c_}]
id[%r{((_p_).*_c_)}]
id[%r{([^(_p_)].*_c_)}]
id[%r{(_p_.*_c_)}]
id[%r{[^(.*_p_)]}]
id[%r{[^(.*_p_)](.*)_c_}]
id[%r{[^(_p_)](.*)_c_}]
id[%r{^(.*_p_)(.*)_c_}]
id[%r{.*_p_(.*)_c_}]
id[%r{.*_p_(.*)}]
id[%r{.*_p_}]
id[%r{.*(_p_)}]
id[%r{(_p_)}]
id[%r{(_p_)*}]
id[%r{(_p_)*(_c_)}]
id[%r{_p_*_c_}]
id[%r{.*}]
id[%r{*}]
id[%r{^(_p_).*}]
id[\^(_p_).*\,1]
id[%r{\^(_p_).*\},1]
id[%r{\^(_p_).*\z}]
id[%r{\^(_p_).*\}]
id[%r{\^(_p_).*\z}]
id[%r{\^(_p_).*\}]
id[%r{\A^(_p_).*\z}]
id[%r{\A^.*_p_.*\z}]
id[%r{\A[^(.)]*_p_.*\z}]
id[%r{\A[^.]*_p_.*\z}]
id[%r{\A.*_p_.*\z}]
id[%r{\A[^.]*_p_\z}]
id[%r{\A[.]*_p_\z}]
id[%r{\A.*_p_\z}]
id[%r{\A*_p_*\z}]
id[%r{\A*_p_\z}]
id[%r{\A_p_\z}]
id[%r{\A[^(_p_)]\z}]
id[%r{\A[^(_p_)]*\z}]
id[%r{\A[^.*_p_]*\z}]
id[%r{\A[^(.*_p_)]*\z}]
id[%r{\A[^(.*_p_)*\z}]
id[%r{\A.*_p_.*\z}]
id[%r{\A.*_p_\z}]
id[%r{\A.*\z}]
id[%r{[^_]*\z}]
continue
id[%r{[^_]*\z}]
id
continue
id
continue
port_id[]
b = a + 5.to_s
b = a+5
a
port_id
a
a = port_id.slice!("button_")
a = port_id!.slice("button_")
a
a = port_id.slice("button_")
port_id
port_id.slice("button_")
port_id
params[:source]
continue
params[:source]
